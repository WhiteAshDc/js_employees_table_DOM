{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","headers","querySelectorAll","tbody","addEventListener","tr","forEach","row","item","classList","remove","add","setAttribute","directions","Array","from","map","sortColumn","index","type","getAttribute","rows","direction","multiply","newRows","sort","row1","row2","cellA","textContent","cellB","a","transform","b","call","removeChild","newRow","appendChild","content","parseFloat","slice","replaceAll","header"],"mappings":";AAAA,aAEA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAUH,EAAMI,iBAAiB,MACjCC,EAAQL,EAAME,cAAc,SAElCG,EAAMC,iBAAiB,QAAS,WACxBC,IAAAA,EAAKF,EAAMD,iBAAiB,MAElCG,EAAGC,QAAQ,SAAAC,GACTA,EAAIH,iBAAiB,QAAS,WAC5BC,EAAGC,QAAQ,SAAAE,GAAQA,OAAAA,EAAKC,UAAUC,OAAO,YACzCH,EAAIE,UAAUE,IAAI,gBAKxBV,EAAQ,GAAGW,aAAa,YAAa,QACrCX,EAAQ,GAAGW,aAAa,YAAa,QACrCX,EAAQ,GAAGW,aAAa,YAAa,QACrCX,EAAQ,GAAGW,aAAa,YAAa,OACrCX,EAAQ,GAAGW,aAAa,YAAa,UAErC,IAAMC,EAAaC,MAAMC,KAAKd,GAASe,IAAI,WAAM,MAAA,KAE3CC,EAAa,SAACC,GACZC,IAAAA,EAAOlB,EAAQiB,GAAOE,aAAa,aACnCC,EAAOlB,EAAMD,iBAAiB,MAC9BoB,EAAYT,EAAWK,IAAU,SACjCK,EAAyB,WAAdD,EAAyB,GAAK,EACzCE,EAAUV,MAAMC,KAAKM,GAE3BG,EAAQC,KAAK,SAACC,EAAMC,GACZC,IAAAA,EAAQF,EAAKxB,iBAAiB,MAAMgB,GAAOW,YAC3CC,EAAQH,EAAKzB,iBAAiB,MAAMgB,GAAOW,YAE3CE,EAAIC,EAAUb,EAAMS,GACpBK,EAAID,EAAUb,EAAMW,GAElB,QAAA,GACDC,KAAAA,EAAIE,EACA,OAAA,EAAIV,EACRQ,KAAAA,EAAIE,EACA,OAAC,EAAIV,EACTQ,KAAAA,IAAME,EACF,OAAA,KAIV3B,GAAAA,QAAQ4B,KAAKb,EAAM,SAACd,GACrBJ,EAAMgC,YAAY5B,KAGpBM,EAAWK,GAAuB,WAAdI,EAAyB,WAAa,SAE1DE,EAAQlB,QAAQ,SAAA8B,GACdjC,EAAMkC,YAAYD,MAIhBJ,EAAY,SAACb,EAAMmB,GACfnB,OAAAA,GACD,IAAA,MACIoB,OAAAA,WAAWD,GACf,IAAA,SACIC,OAAAA,WAAWD,EAAQE,MAAM,GAAGC,WAAW,IAAK,KAChD,IAAA,OACL,QACSH,OAAAA,EAAQG,WAAW,IAAK,MAIrC,GAAGnC,QAAQ4B,KAAKjC,EAAS,SAACyC,EAAQxB,GAChCwB,EAAOtC,iBAAiB,QAAS,WAC/Ba,EAAWC","file":"main.5f9e2b0f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\nconst tbody = table.querySelector('tbody');\n\ntbody.addEventListener('click', () => {\n  const tr = tbody.querySelectorAll('tr');\n\n  tr.forEach(row => {\n    row.addEventListener('click', () => {\n      tr.forEach(item => item.classList.remove('active'));\n      row.classList.add('active');\n    });\n  });\n});\n\nheaders[0].setAttribute('data-type', 'text');\nheaders[1].setAttribute('data-type', 'text');\nheaders[2].setAttribute('data-type', 'text');\nheaders[3].setAttribute('data-type', 'age');\nheaders[4].setAttribute('data-type', 'salary');\n\nconst directions = Array.from(headers).map(() => '');\n\nconst sortColumn = (index) => {\n  const type = headers[index].getAttribute('data-type');\n  const rows = tbody.querySelectorAll('tr');\n  const direction = directions[index] || 'sortUP';\n  const multiply = direction === 'sortUp' ? 1 : -1;\n  const newRows = Array.from(rows);\n\n  newRows.sort((row1, row2) => {\n    const cellA = row1.querySelectorAll('td')[index].textContent;\n    const cellB = row2.querySelectorAll('td')[index].textContent;\n\n    const a = transform(type, cellA);\n    const b = transform(type, cellB);\n\n    switch (true) {\n      case a < b:\n        return 1 * multiply;\n      case a > b:\n        return -1 * multiply;\n      case a === b:\n        return 0;\n    }\n  });\n\n  [].forEach.call(rows, (row) => {\n    tbody.removeChild(row);\n  });\n\n  directions[index] = direction === 'sortUp' ? 'sortDown' : 'sortUp';\n\n  newRows.forEach(newRow => {\n    tbody.appendChild(newRow);\n  });\n};\n\nconst transform = (type, content) => {\n  switch (type) {\n    case 'age':\n      return parseFloat(content);\n    case 'salary':\n      return parseFloat(content.slice(1).replaceAll(',', ''));\n    case 'text':\n    default:\n      return content.replaceAll(' ', '');\n  }\n};\n\n[].forEach.call(headers, (header, index) => {\n  header.addEventListener('click', () => {\n    sortColumn(index);\n  });\n});\n"]}